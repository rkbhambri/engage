{"version":3,"sources":["assets/img/bg-login.jpg","components/Login/Login.js"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","_store_actions__WEBPACK_IMPORTED_MODULE_5__","_assets_img_bg_login_jpg__WEBPACK_IMPORTED_MODULE_6__","_assets_img_bg_login_jpg__WEBPACK_IMPORTED_MODULE_6___default","connect","state","error","auth","authRedirectPath","isLoading","dispatch","onLogin","email","password","actionCreaters","onSetRedirectPath","path","onEmployeeLogin","onResetError","props","a","createElement","className","style","backgroundImage","concat","height","justifyContent","alignItems","src","alt","width","size","background","color"],"mappings":"oGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uECAxCD,EAAAE,EAAAC,GAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,GAAAV,EAAA,KAAAA,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAAM,EAAAK,GA8DeE,sBAjBS,SAAAC,GACpB,MAAO,CACHC,MAAOD,EAAME,KAAKD,MAClBE,iBAAkBH,EAAME,KAAKC,iBAC7BC,UAAWJ,EAAME,KAAKE,YAIH,SAAAC,GACvB,MAAO,CACHC,QAAS,SAACC,EAAOC,GAAR,OAAqBH,EAASI,IAAqBF,EAAOC,KACnEE,kBAAmB,SAACC,GAAD,OAAUN,EAASI,QACtCG,gBAAiB,SAACL,EAAOC,GAAR,OAAqBH,EAASI,IAA6BF,EAAOC,KACnFK,aAAc,kBAAMR,EAASI,IAAwB,UAI9CV,CApDD,SAACe,GAmBX,OACIvB,EAAAwB,EAAAC,cAAA,OAAKC,UAAU,oBAAoBC,MAAO,CAAEC,gBAAe,OAAAC,OAASD,IAAT,OACvD5B,EAAAwB,EAAAC,cAACtB,EAAA,EAAD,CACIwB,MAAO,CACHG,OAAQ,MACRC,eAAgB,SAChBC,WAAY,WAEhBhC,EAAAwB,EAAAC,cAAA,OAAKQ,IAAKL,IAAiBM,IAAI,OAAOP,MAAO,CAAEQ,MAAO,QAASL,OAAQ,YAE3E9B,EAAAwB,EAAAC,cAACrB,EAAA,EAAD,CAAQgC,KAAK,KAAKT,MAAO,CAAEU,WAAY,OAAQC,MAAO,YAAtD","file":"static/js/15.2c1475d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-login.0d0d3c94.jpg\";","import React from 'react';\nimport { connect } from 'react-redux';\n// import { Redirect } from 'react-router-dom';\nimport { Row, Button } from 'reactstrap';\nimport './Login.css';\nimport * as actionCreaters from '../../store/actions';\n// import { getItem } from '../../helpers/cookie';\nimport backgroundImage from '../../assets/img/bg-login.jpg';\n// import { Link } from 'react-router-dom';\n\nconst Login = (props) => {\n\n    // useEffect(() => {\n    //     if (props.authRedirectPath !== '/') {\n    //         props.onSetRedirectPath('/');\n    //     }\n    // }, []);\n\n    // const login = (event, email, password) => {\n    //     event.preventDefault();\n    //     props.onSetRedirectPath('/');\n    //     props.location.pathname === '/admin' ? props.onEmployeeLogin(email, password) : props.onLogin(email, password);\n    // };\n\n    // let authRedirect = null;\n    // if (getItem('token')) {\n    //     authRedirect = <Redirect to=\"/\" />\n    // }\n\n    return (\n        <div className=\"h-100 text-center\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n            <Row\n                style={{\n                    height: '80%',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }}>\n                <img src={backgroundImage} alt=\"logo\" style={{ width: '100px', height: '100px' }} />\n            </Row>\n            <Button size=\"lg\" style={{ background: '#fff', color: '#888888' }}>SIGN IN WITH GOOGLE</Button>\n        </div>\n\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        error: state.auth.error,\n        authRedirectPath: state.auth.authRedirectPath,\n        isLoading: state.auth.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogin: (email, password) => dispatch(actionCreaters.login(email, password)),\n        onSetRedirectPath: (path) => dispatch(actionCreaters.setRedirectPath()),\n        onEmployeeLogin: (email, password) => dispatch(actionCreaters.employeeLogin(email, password)),\n        onResetError: () => dispatch(actionCreaters.authFail(null)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"],"sourceRoot":""}