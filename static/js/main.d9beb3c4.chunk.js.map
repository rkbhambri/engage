{"version":3,"sources":["store/actions/actionTypes.js","helpers/miscellaneous.js","config.js","assets/img/something-went-wrong.gif","components/PageSpinner/PageSpinner.js","components/Header/Header.js","components/Snackbar/Snackbar.js","components/MainLayout/MainLayout.js","ErrorBoundary/ErrorBoundary.js","Routes.js","App.js","store/utility.js","store/reducers/Auth.js","store/reducers/Home.js","store/reducers/MyCards.js","store/reducers/MainLayout.js","store/reducers/Contests.js","store/reducers/Leaders.js","helpers/array.js","store/reducers/Wallet.js","store/reducers/Account.js","index.js","httpInstance/axios.js","store/actions/Auth.js","url/Auth.js","store/actions/Leaders.js","store/actions/MainLayout.js","url/MainLayout.js","url/MyCards.js","store/actions/MyCards.js","url/Home.js","store/actions/Home.js","store/actions/index.js","helpers/cookie.js","components/Snackbar/Snackbar.module.css","ErrorBoundary/ErrorBoundary.module.css"],"names":["__webpack_require__","d","__webpack_exports__","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_REDIRECT_PATH","SET_OTP","EMPTY_TOKEN","UPDATE_SET_PASSWORD_STATUS","SET_REQUEST_TO_SET_PASSWORD_ID","UPDATE_LOADING_STATUS","SET_USER_DETAILS","SET_USER_SOCIAL_URL","EMPTY_USER_PROFILE","SET_CARDS","EMPTY_CARDS","SET_SOCIAL_URL","UPDATE_CARDS","SET_QUESTIONS","SET_LEADERS","SET_WALLET_DETAILS","SET_TRANSACTIONS","SET_UNSETTLED_CONTESTS","SET_SETTLED_CONTESTS","SET_SNACKBAR_MESSAGE","isMobileView","parseData","getCapitalizeText","isEmpty","isEqual","convertDateFormat","convertToTimestamp","test","navigator","userAgent","data","JSON","parse","stringify","text","replace","l","toUpperCase","item","trim","item1","item2","toLowerCase","date","customDateFormat","month","Date","getMonth","day","getDate","concat","getFullYear","getTime","axiosBaseUrl","googleClientId","facebookAppId","encodeURIComponent","module","exports","p","PageSpinner","_ref","color","react_default","a","createElement","Row","style","height","justifyContent","alignItems","maxWidth","Dimmer","active","inverted","Loader","content","Header","props","className","background","id","flexDirection","flexWrap","react_router_dom","to","connect","dispatch","onSetSnackbarMessage","message","actionCreaters","useEffect","setTimeout","checkInternet","emptySnackbar","error","Styles","snackbar","show","join","Button","close","marginLeft","onClick","state","mainLayout","userDetails","home","onUpdateUserLocation","location","_useState","useState","_useState2","Object","slicedToArray","isOnline","setOnlineStatus","getMyLocation","updateOnlineStatus","onLine","window","geolocation","getCurrentPosition","position","latitude","coords","longitude","Col","xs","lg","md","paddingLeft","paddingRight","components_Snackbar_Snackbar","Fragment","children","components_Header_Header","addEventListener","ErrorBoundary","hasError","info","console","log","this","classes","src","errorImage","alt","Component","Login","React","lazy","Promise","all","e","then","bind","Signup","Engage","MyCards","ReceivedCards","Home","unauthenticated_routes","path","component","authenticated_routes","App","routes","getRedirectPath","routeExist","i","length","_this","pathname","redirectDefaultRoute","getItem","Suspense","fallback","components_PageSpinner_PageSpinner","map","key","react_router","exact","src_ErrorBoundary_ErrorBoundary","withRouter","auth","isAuthenticated","token","authRedirectPath","superAdminDetails","onSetRedirectPath","updateObject","oldObject","updatedProperties","objectSpread","initialState","userId","adminDetails","otp","requestToSetPassword","isPasswordSetSuccessfully","isLoading","Auth","arguments","undefined","action","type","actionTypes","authSuccess","authFail","authLogout","status","updateLoadingStatus","setRedirectPath","setOtp","emptyToken","setRequestToSetPasswordId","updateSetPasswordStatus","userSocialUrl","setUserDetails","setUserSocialUrl","emptyUserProfile","cards","socialUrl","setCards","emptyCards","updateCardsData","cardDetails","updateCards","setSocialUrl","MainLayout","setSnackbarMessage","questions","questionText","entryFee","contestId","options","optionText","betCountOnOption","Contests","setQuestions","leaders","isLeadersEmpty","Leaders","arr","setLeaders","walletDetails","transactions","Wallet","details","wallet","setWalletDetails","setTransactions","unsettledContests","settledContests","Account","setUnsettledContests","setSettledContests","rootReducer","combineReducers","myCards","contests","account","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","basename","process","split","pop","src_App","ReactDOM","render","document","getElementById","instance","axios","create","baseURL","headers","Content-Type","interceptors","request","use","response","x-access-token","login","loginDetails","post","entity","role","roles","setItem","catch","signup","signupDetails","socialLogin","authDetails","getLeaders","get","updateUserLocation","put","cardsUrl","getCards","user","getSocialUrl","addCard","updateCardDetails","cardId","cardDetailsUrl","userProfileUrl","getUserProfile","social","updateUserProfile","profileDetails","updateSocialUrl","socialPlatform","Auth_login","Auth_setRedirectPath","Auth_authFail","Auth_signup","Auth_socialLogin","Leaders_getLeaders","MainLayout_setSnackbarMessage","MainLayout_updateUserLocation","MyCards_getCards","MyCards_getSocialUrl","MyCards_addCard","MyCards_emptyCards","MyCards_updateCardDetails","Home_getUserProfile","Home_emptyUserProfile","Home_updateUserProfile","Home_updateSocialUrl","clearItems","cookies","Cookies","meta","value","set","allCookies","getAll","remove","fadeout","fadein","close_icon","wrong-outer","wrong-inner","img-went-wrong"],"mappings":"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","file":"static/js/main.d9beb3c4.chunk.js","sourcesContent":["/*\n * Define which type of action to be dispatched to reducer\n */\n\n\n// AUTH\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const SET_REDIRECT_PATH = 'SET_REDIRECT_PATH';\nexport const SET_USER_PROFILE_DETAILS = 'SET_USER_PROFILE_DETAILS';\nexport const SET_OTP = 'SET_OTP';\nexport const EMPTY_TOKEN = 'EMPTY_TOKEN';\nexport const UPDATE_SET_PASSWORD_STATUS = 'UPDATE_SET_PASSWORD_STATUS';\n\nexport const SET_REQUEST_TO_SET_PASSWORD_ID = 'SET_REQUEST_TO_SET_PASSWORD_ID';\n\nexport const UPDATE_LOADING_STATUS = 'UPDATE_LOADING_STATUS';\n\n// For Home\nexport const SET_USER_DETAILS = 'SET_USER_DETAILS';\nexport const SET_USER_SOCIAL_URL = 'SET_USER_SOCIAL_URL';\nexport const EMPTY_USER_PROFILE = 'EMPTY_USER_PROFILE';\n\n// For My Cards\nexport const SET_CARDS = 'SET_CARDS';\nexport const EMPTY_CARDS = 'EMPTY_CARDS';\nexport const SET_SOCIAL_URL = 'SET_SOCIAL_URL';\nexport const UPDATE_CARDS = 'UPDATE_CARDS';\n\n// For Contests\n\nexport const SET_QUESTIONS = 'SET_QUESTIONS';\n\n// For Leaders\nexport const SET_LEADERS = 'SET_LEADERS'\n\n// For Wallet\nexport const SET_WALLET_DETAILS = 'SET_WALLET_DETAILS';\nexport const SET_TRANSACTIONS = 'SET_TRANSACTIONS';\n\n// For Account\nexport const SET_UNSETTLED_CONTESTS = 'SET_UNSETTLED_CONTESTS';\nexport const SET_SETTLED_CONTESTS = 'SET_SETTLED_CONTESTS';\n\n// Snackbar Message\nexport const SET_SNACKBAR_MESSAGE = 'SET_SNACKBAR_MESSAGE';\n","\nexport const isMobileView = () => {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n\nexport const parseData = (data) => {\n    return JSON.parse(JSON.stringify(data));\n};\n\nexport const getCapitalizeText = (text) => {\n    return text.replace(/\\b\\w/g, l => l.toUpperCase());\n}\n\nexport const isEmpty = (item) => {\n    return item.trim() === '';\n};\n\nexport const isEqual = (item1, item2) => {\n    if (typeof (item1) === 'number' && typeof (item2) === 'number') {\n        return item1 === item2;\n    }\n    if (typeof (item1) === 'string' && typeof (item2) === 'string') {\n        return item1.toLowerCase() === item2.toLowerCase();\n    }\n};\n\nexport const containsOnlyNumber = (item) => {\n    let regex = /^[0-9]*$/;\n    return regex.test(item);\n};\n\nexport const isGreaterThan = (item1, item2) => {\n    return item1 > item2;\n};\n\nexport const isGreaterThanOrEqualTo = (item1, item2) => {\n    return item1 >= item2;\n};\n\nexport const isLessThan = (item1, item2) => {\n    return item1 < item2;\n};\n\nexport const isLessThanOrEqualTo = (item1, item2) => {\n    return item1 <= item2;\n};\n\nexport const create_UUID = (name) => {\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return (c === 'x' ? r : ((r & 0x3) | 0x8)).toString(16);\n    });\n    return uuid.concat(name);\n};\n\nexport const getDateTime = (timeStamp) => {\n    const date = new Date(timeStamp);\n    const dateTime = (\n        date.getUTCFullYear() +\n        '-' + ('0' + date.getUTCMonth()).slice(-2) +\n        '-' + ('0' + date.getUTCDate()).slice(-2) +\n        ' ' + ('0' + date.getUTCHours()).slice(-2) +\n        ':' + ('0' + date.getUTCMinutes()).slice(-2) +\n        ':' + ('0' + date.getUTCSeconds()).slice(-2)\n    );\n    return dateTime;\n};\n\nexport const getDate = (timeStamp) => {\n    const date = new Date(timeStamp);\n    const updatedDate = (\n        date.getUTCFullYear() +\n        '-' + ('0' + date.getUTCMonth()).slice(-2) +\n        '-' + ('0' + date.getUTCDate()).slice(-2)\n    );\n    return updatedDate;\n};\n\nexport const convertDateFormat = (date, customDateFormat) => {\n    date = new Date(date);\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n    month = month < 10 ? `0${month}` : month;\n    day = day < 10 ? `0${day}` : day;\n    if (customDateFormat) {\n        return `${day}/${month}/${date.getFullYear()}`\n    }\n    return `${date.getFullYear()}-${month}-${day}`;\n};\n\nexport const convertToTimestamp = (date) => {\n    return new Date(date).getTime();\n};\n","// export const axiosBaseUrl = 'http://13.126.172.69:3000';\nexport const axiosBaseUrl = process.env.NODE_ENV !== 'production' ? 'http://localhost:3002/' : 'https://fd337795.ngrok.io/';\n// https://api.paisajeet.com/\n\nconst appUrl = encodeURIComponent(process.env.NODE_ENV !== 'production' ? 'http://13.235.50.69:3000/' : 'http://api.league-app.com/');\n\nexport const facebookUrl = 'https://www.facebook.com/dialog/share?app_id=162911467985829&display=popup&u=' + appUrl;\nexport const LinkedInUrl = '?mini=true&source=' + appUrl;\n\nexport const googleClientId = process.env.NODE_ENV !== 'production' ?\n    '366862635690-ecl51tttjto9kdjgnt1te6hkl5aol9id.apps.googleusercontent.com'\n    :\n    '923778317040-l3qdops5rimpbmg5fclhlk8kk0g6i6p0.apps.googleusercontent.com';\n\nexport const facebookAppId = process.env.NODE_ENV !== 'production' ? '880883362326999' : '508741089833759';","module.exports = __webpack_public_path__ + \"static/media/something-went-wrong.cca82265.gif\";","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Row } from 'reactstrap';\nimport { Dimmer, Loader as Loading } from 'semantic-ui-react';\n\nconst PageSpinner = ({ color = 'primary' }) => {\n    return (\n        <Row\n            style={{\n                height: '100vh',\n                justifyContent: 'center',\n                alignItems: 'center',\n                maxWidth: '100%'\n            }}>\n            <Dimmer active inverted>\n                <Loading inverted content='Loading' />\n            </Dimmer>\n        </Row>\n    );\n};\n\nPageSpinner.propTypes = {\n    color: PropTypes.oneOf([\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n    ]),\n};\n\nexport default PageSpinner;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = (props) => {\n    return (\n        <nav\n            className={`navbar navbar-expand-md navbar-dark fixed-bottom`}\n            style={{ background: '#313648' }}>\n            <div className=\"w-100\" id=\"navbarCollapse\">\n                <div className=\"navbar-nav pt-2 pb-2\" style={{ flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' }}>\n                    <NavLink to=\"/\" className=\"nav-item nav-link p-2\">\n                        {/* <img src={Img} style={{ width: '30px', height: '30px' }} alt=\"img removed\" /><br /> */}\n                        Home\n                    </NavLink>\n                    <NavLink to=\"/engage\" className=\"nav-item nav-link p-2\">\n                        {/* <img src={Img} style={{ width: '30px', height: '30px' }} alt=\"img removed\" /><br /> */}\n                        Engage\n                    </NavLink>\n                    <NavLink to=\"/my-cards\" className=\"nav-item nav-link p-2\">\n                        {/* <img src={Img} style={{ width: '30px', height: '30px' }} alt=\"img removed\" /><br /> */}\n                        My Cards\n                    </NavLink>\n                    <NavLink to=\"/received-cards\" className=\"nav-item nav-link p-2\">\n                        {/* <img src={Img} style={{ width: '30px', height: '30px' }} alt=\"img removed\" /><br /> */}\n                        Received\n                    </NavLink>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default Header;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreaters from '../../store/actions';\nimport Styles from './Snackbar.module.css';\nimport { Button } from \"reactstrap\";\n\nconst Snackbar = (props) => {\n\n    useEffect(() => {\n        setTimeout(() => {\n            props.onSetSnackbarMessage(null);\n            props.checkInternet && props.emptySnackbar();\n        }, 3000);\n    }, []);\n\n    return (\n        <div className={props.error ? [Styles.snackbar, Styles.show].join(\" \") : Styles.snackbar}>\n            <Button\n                close\n                style={{ color: '#fff', marginLeft: '35px' }}\n                onClick={() => {\n                    props.onSetSnackbarMessage(null);\n                    props.checkInternet && props.emptySnackbar();\n                }}></Button>\n            {props.error}\n        </div>\n    )\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSetSnackbarMessage: (message) => dispatch(actionCreaters.setSnackbarMessage(message))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Snackbar);","import React, { useState, useEffect } from 'react';\nimport { Col } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport * as actionCreaters from '../../store/actions';\nimport { isMobileView } from '../../helpers/miscellaneous';\nimport Header from '../Header/Header';\nimport Snackbar from '../Snackbar/Snackbar';\n\nconst MainLayout = (props) => {\n    const [isOnline, setOnlineStatus] = useState(null);\n\n    useEffect(() => {\n        getMyLocation();\n    }, []);\n\n    const updateOnlineStatus = () => {\n        setOnlineStatus(navigator.onLine);\n    };\n\n    const emptySnackbar = () => {\n        setOnlineStatus(null);\n    };\n\n    const getMyLocation = () => {\n        const location = window.navigator && window.navigator.geolocation\n\n        if (location) {\n            location.getCurrentPosition((position) => {\n                props.onUpdateUserLocation({\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude\n                })\n            }, (error) => {\n                // setLocation({\n                //     latitude: 'err-latitude',\n                //     longitude: 'err-longitude'\n                // })\n            })\n        }\n    };\n\n    const checkInternetConnection = () => {\n        window.addEventListener('online', () => updateOnlineStatus());\n        window.addEventListener('offline', () => updateOnlineStatus());\n        if (isOnline) {\n            return (\n                <Snackbar\n                    error='Back Online !'\n                    checkInternet=\"true\"\n                    emptySnackbar={() => emptySnackbar()}\n                />\n            );\n        }\n        if (isOnline === false) {\n            return (\n                <Snackbar\n                    error='You are Offline !'\n                    checkInternet=\"true\"\n                    emptySnackbar={() => emptySnackbar()}\n                />\n            );\n        }\n    };\n\n    // props.token && showPromptMessage();\n    return (\n        <Col className=\"main-layout offset-md-4\" xs={12} lg={4} md={4} style={{ paddingLeft: '0px', paddingRight: '0px' }}>\n            {\n                props.message &&\n                <Snackbar error={props.message} />\n            }\n            {\n                isMobileView() ?\n                    <>\n                        {props.children}<br /><br /><br />\n                        <Header />\n                    </>\n                    :\n                    <>\n                        <Header />\n                        {props.children}\n                    </>\n            }\n            {/* Check Internet Connection */}\n            {checkInternetConnection()}\n        </Col>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        message: state.mainLayout.message,\n        userDetails: state.home.userDetails\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateUserLocation: (location) => dispatch(actionCreaters.updateUserLocation(location))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n","import React, { Component } from 'react';\nimport classes from './ErrorBoundary.module.css';\nimport errorImage from '../assets/img/something-went-wrong.gif';\n\nclass ErrorBoundary extends Component {\n\n    state = {\n        hasError: false\n    };\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    };\n\n    componentDidCatch(error, info) {\n        console.log('===error===', error, '===info===', info)\n        // sendErrorInfo(error, info.componentStack);\n    };\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div className={classes['wrong-outer']}>\n                    <div className={classes['wrong-inner']}>\n                        <img className={classes['img-went-wrong']} src={errorImage} alt='KONTIKI LABS' />\n                        <h2>Oops! Looks like something went wrong.</h2>\n                        <p>Give us a few moments to look in to it.</p>\n                    </div>\n                </div>\n            );\n        }\n        return this.props.children;\n    };\n};\n\nexport default ErrorBoundary;\n","import React from 'react';\nconst Login = React.lazy(() => import('./components/Auth/Login/Login'));\nconst Signup = React.lazy(() => import('./components/Auth/Signup/Signup'));\nconst Engage = React.lazy(() => import('./components/Engage/Engage'));\nconst MyCards = React.lazy(() => import('./components/MyCards/MyCards'));\nconst ReceivedCards = React.lazy(() => import('./components/ReceivedCards/ReceivedCards'));\nconst Home = React.lazy(() => import('./components/Home/Home'));\n\nexport const unauthenticated_routes = [\n    {\n        path: '/login',\n        component: Login\n    },\n    {\n        path: '/signup',\n        component: Signup\n    }\n];\n\nexport const authenticated_routes = [\n    {\n        path: '/',\n        component: Home\n    },\n    {\n        path: '/engage',\n        component: Engage\n    },\n    {\n        path: '/my-cards',\n        component: MyCards\n    },\n    {\n        path: '/received-cards',\n        component: ReceivedCards\n    }\n];\n\nexport const authenticated_super_admin_routes = [\n    {\n        path: '/admin',\n        component: Login\n    },\n];","// import GAListener from 'components/GAListener';\nimport React, { Component } from 'react';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PageSpinner from './components/PageSpinner/PageSpinner';\nimport MainLayout from './components/MainLayout/MainLayout';\nimport * as actionCreaters from './store/actions';\nimport { getItem } from './helpers/cookie';\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary'\n// import Loader from './components/Loader/Loader';\n// const ErrorBoundary = React.lazy(() => import('./ErrorBoundary/ErrorBoundary'));\nimport { authenticated_routes, unauthenticated_routes } from './Routes';\nimport './styles/reduction.scss';\n\nclass App extends Component {\n\n    state = {\n        path: '',\n        routes: []\n    };\n\n    getRedirectPath = (routes) => {\n        let routeExist = false;\n        for (let i = 0; i < routes.length; i++) {\n            if (routes[i].path === this.props.location.pathname) {\n                routeExist = true;\n            }\n        }\n        const redirectDefaultRoute = getItem('token') ? '/' : '/';\n        return routeExist ? this.props.location.pathname : redirectDefaultRoute\n    }\n\n    render() {\n\n\n        // let routes = (\n        //     <MainLayout breakpoint={this.props.breakpoint}>\n        //         <React.Suspense fallback={<Loader />} >\n        //             {\n        //                 authenticated_routes.map(({ path, component }, key) => <Route exact path={path} component={component} key={key} />)\n        //             }\n        //             <Redirect to={this.getRedirectPath(authenticated_routes)} />\n        //         </React.Suspense>\n        //     </MainLayout>\n        // );\n\n        // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImE5ZGVlZWYwLTY0ZmItMTFlYS04NDUwLTAzZGIxMWYzODQ3NiIsIm5hbWUiOiJUZXN0IiwiZW1haWwiOiJ0ZXN0QGdtYWlsLmNvbSIsIm1vYmlsZSI6Ijc1MzY3ODkwMjAiLCJpYXQiOjE1ODQwODQyNjV9.NAWb4CVez9p1Ao1eVoF2Q4JT1pjFnmvx08hsTQRBMos'\n        // const id = 'a9deeef0-64fb-11ea-8450-03db11f38476';\n        // console.log('==token===', token, '===id===', id);\n\n        let routes = (\n            <React.Suspense fallback={<PageSpinner />} >\n                {\n                    authenticated_routes.map(({ path, component }, key) => <Route exact path={path} component={component} key={key} />)\n                }\n                <Redirect to={this.getRedirectPath(unauthenticated_routes)} />\n            </React.Suspense>\n        );\n\n        // if (getItem('token')) {\n        //     routes = (\n        //         <>\n        //             <MainLayout breakpoint={this.props.breakpoint}>\n        //                 <React.Suspense fallback={<PageSpinner />} >\n        //                     {\n        //                         authenticated_routes.map(({ path, component }, key) => <Route exact path={path} component={component} key={key} />)\n        //                     }\n        //                 </React.Suspense>\n        //             </MainLayout>\n        //             <Redirect to={this.getRedirectPath(authenticated_routes)} />\n        //         </>\n        //     );\n        // }\n\n        return (\n            <ErrorBoundary>\n                <Switch>\n                    {routes}\n                </Switch>\n            </ErrorBoundary>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        authRedirectPath: state.auth.authRedirectPath,\n        superAdminDetails: state.auth.superAdminDetails\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSetRedirectPath: (path) => dispatch(actionCreaters.setRedirectPath(path))\n    };\n};\n\nexport default withRouter((connect(mapStateToProps, mapDispatchToProps)(App)));\n// withRouter(connect(mapStateToProps, mapDispatchToProps)(AuthorizationCheck(App, axios)));\n","/*\n * This is the basic function vastly used in in reducers to update or concatinate\n * their old object with new properties\n */\n\nexport const updateObject = (oldObject, updatedProperties) => {\n\treturn {\n\t\t...oldObject,\n\t\t...updatedProperties\n\t};\n};\n","/*\n * This file contains store (accessible to all components) which get manipulated based on dispatched actions for Authentication\n */\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    adminDetails: {},\n    authRedirectPath: '/admin',\n    otp: '',\n    requestToSetPassword: '',\n    userDetails: {},\n    isPasswordSetSuccessfully: false,\n    isLoading: false\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        adminDetails: action.adminDetails,\n        token: action.adminDetails.token,\n        userId: action.adminDetails.id,\n        authRedirectPath: '/'\n    });\n};\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n        userId: null,\n        error: null,\n        adminDetails: {},\n        authRedirectPath: '/onboard',\n        otp: '',\n        requestToSetPassword: '',\n        userDetails: {},\n        isPasswordSetSuccessfully: false,\n        isLoading: false\n    });\n};\n\nconst updateLoadingStatus = (state, action) => {\n    return updateObject(state, {\n        isLoading: action.status\n    });\n};\n\nconst setRedirectPath = (state, action) => {\n    return updateObject(state, {\n        authRedirectPath: action.path\n    });\n};\n\nconst setOtp = (state, action) => {\n    return updateObject(state, {\n        otp: action.otp\n    });\n};\n\nconst emptyToken = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n};\n\nconst setRequestToSetPasswordId = (state, action) => {\n    return updateObject(state, {\n        requestToSetPassword: action.requestToSetPassword\n    });\n};\n\nconst updateSetPasswordStatus = (state, action) => {\n    return updateObject(state, {\n        isPasswordSetSuccessfully: action.status\n    });\n};\n\nconst Auth = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_SUCCESS:\n            return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL:\n            return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT:\n            return authLogout(state, action);\n        case actionTypes.UPDATE_LOADING_STATUS:\n            return updateLoadingStatus(state, action);\n        case actionTypes.SET_REDIRECT_PATH:\n            return setRedirectPath(state, action);\n        case actionTypes.SET_OTP:\n            return setOtp(state, action);\n        case actionTypes.EMPTY_TOKEN:\n            return emptyToken(state, action);\n        case actionTypes.SET_REQUEST_TO_SET_PASSWORD_ID:\n            return setRequestToSetPasswordId(state, action);\n        case actionTypes.UPDATE_SET_PASSWORD_STATUS:\n            return updateSetPasswordStatus(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Auth;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    userDetails: {},\n    userSocialUrl: {}\n};\n\nconst setUserDetails = (state, action) => {\n    return updateObject(state, {\n        userDetails: action.userDetails\n    });\n};\n\nconst setUserSocialUrl = (state, action) => {\n    return updateObject(state, {\n        userSocialUrl: action.userSocialUrl\n    });\n};\n\nconst emptyUserProfile = (state, action) => {\n    return updateObject(state, {\n        userDetails: {},\n        userSocialUrl: {}\n    });\n};\n\nconst Home = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_USER_DETAILS:\n            return setUserDetails(state, action);\n        case actionTypes.SET_USER_SOCIAL_URL:\n            return setUserSocialUrl(state, action);\n        case actionTypes.EMPTY_USER_PROFILE:\n            return emptyUserProfile(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Home;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    cards: [],\n    socialUrl: {}\n};\n\nconst setCards = (state, action) => {\n    return updateObject(state, {\n        cards: action.cards\n    });\n};\n\nconst updateCards = (state, action) => {\n    const updateCardsData = state.cards.concat(action.cardDetails);\n    return updateObject(state, {\n        cards: updateCardsData\n    });\n};\n\nconst setSocialUrl = (state, action) => {\n    return updateObject(state, {\n        socialUrl: action.socialUrl\n    });\n};\n\nconst emptyCards = (state, action) => {\n    return updateObject(state, {\n        cards: []\n    });\n};\n\nconst MyCards = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_CARDS:\n            return setCards(state, action);\n        case actionTypes.EMPTY_CARDS:\n            return emptyCards(state, action);\n        case actionTypes.UPDATE_CARDS:\n            return updateCards(state, action);\n        case actionTypes.SET_SOCIAL_URL:\n            return setSocialUrl(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default MyCards;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    message: null\n};\n\nconst setSnackbarMessage = (state, action) => {\n    return updateObject(state, {\n        message: action.message\n    });\n};\n\nconst MainLayout = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_SNACKBAR_MESSAGE:\n            return setSnackbarMessage(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default MainLayout;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    // questions: [],\n    questions: [{\n        questionText: 'hello real madrid blah blah blah blah v v blah',\n        entryFee: 6578,\n        contestId: 'J71282',\n        options: [{\n            id: '5746154123',\n            optionText: 'this is option1 this is testing long text option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        }]\n    },\n    {\n        questionText: 'hello real madrid222',\n        entryFee: 6578,\n        contestId: 'J71282',\n        options: [{\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        }]\n    },\n    {\n        questionText: 'hello real madrid3',\n        entryFee: 6578,\n        contestId: 'J71282',\n        options: [{\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        },\n        {\n            id: '5746154123',\n            optionText: 'this is option1',\n            betCountOnOption: '50'\n        }]\n    }]\n};\n\nconst setQuestions = (state, action) => {\n    return updateObject(state, {\n        questions: action.questions\n    });\n};\n\nconst Contests = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_QUESTIONS:\n            return setQuestions(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Contests;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nimport { isArrayEmpty } from '../../helpers/array';\n\nconst initialState = {\n    leaders: [],\n    isLeadersEmpty: false\n};\n\nconst setLeaders = (state, action) => {\n    return updateObject(state, {\n        leaders: action.leaders,\n        isLeadersEmpty: isArrayEmpty(action.leaders)\n    });\n};\n\nconst Leaders = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_LEADERS:\n            return setLeaders(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Leaders;","\nexport const isArrayEmpty = (arr) => {\n    return arr.length === 0;\n};\n\nexport const isArrayNotEmpty = (arr) => {\n    return arr.length > 0;\n};\n\nexport const isIncludes = (array, value) => {\n    return array.includes(value);\n};\nexport const arraySplice = (array, spliceAt) => {\n    return array.splice(spliceAt, 0);\n};\n\nexport const arraySlice = (array, spliceAt, limit) => {\n    return array.slice(spliceAt, limit);\n};\n\nexport const arrayPush = (array, data) => {\n    return array.push(data);\n};\n\nexport const arrayConcat = (array, data) => {\n    return array.concat(data);\n};\n\nexport const arrayPop = (array) => {\n    return array.pop();\n};\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    walletDetails: {},\n    transactions: []\n};\n\nconst setWalletDetails = (state, action) => {\n    return updateObject(state, {\n        walletDetails: action.details.wallet\n    });\n};\n\nconst setTransactions = (state, action) => {\n    return updateObject(state, {\n        transactions: action.transactions\n    });\n};\n\nconst Wallet = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_WALLET_DETAILS:\n            return setWalletDetails(state, action);\n        case actionTypes.SET_TRANSACTIONS:\n            return setTransactions(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Wallet;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    unsettledContests: [],\n    settledContests: []\n};\n\nconst setUnsettledContests = (state, action) => {\n    return updateObject(state, {\n        unsettledContests: action.unsettledContests\n    });\n};\n\nconst setSettledContests = (state, action) => {\n    return updateObject(state, {\n        settledContests: action.settledContests\n    });\n};\n\nconst Account = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_UNSETTLED_CONTESTS:\n            return setUnsettledContests(state, action);\n        case actionTypes.SET_SETTLED_CONTESTS:\n            return setSettledContests(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Account;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n// import * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport Auth from './store/reducers/Auth';\nimport Home from './store/reducers/Home';\nimport MyCards from './store/reducers/MyCards';\nimport MainLayout from './store/reducers/MainLayout';\nimport Contests from './store/reducers/Contests';\nimport Leaders from './store/reducers/Leaders';\nimport Wallet from './store/reducers/Wallet';\nimport Account from './store/reducers/Account';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nconst getBasename = () => {\n    return `/${process.env.PUBLIC_URL.split('/').pop()}`;\n};\n\n/*\n * combining all the reducers\n */\nconst rootReducer = combineReducers({\n    auth: Auth,\n    mainLayout: MainLayout,\n    home: Home,\n    myCards: MyCards,\n    contests: Contests,\n    leaders: Leaders,\n    wallet: Wallet,\n    account: Account\n});\n\n/*\n * composeEnhancers is for chrome dev toolbar which helps us see store management of redux\n */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n/*\n * Creating Store and applying middleware \n */\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n/*\n * Wrapping the main app with BrowserRouter (provides routing and helps us navigate through project)\n * Provider is a part of Redux which is needed in order to get access to store throughout our project \n */\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename={getBasename()}>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n// serviceWorker.register();\n","// importing axios for network request\nimport axios from 'axios';\nimport { axiosBaseUrl } from '../config';\nimport { getItem } from '../helpers/cookie';\n// Get Authentication token\nconst getAuthToken = () => {\n    const token = getItem('token');\n    return token;\n}\n\n// Created Axios instance to use it in whole application\nvar instance = axios.create({\n    baseURL: axiosBaseUrl,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n// declaring interceptors\ninstance.interceptors.request.use(response => {\n    const token = getAuthToken();\n    // Check if User is authenticated or not\n    if (token) {\n        response.headers = {\n            'x-access-token': `${token}`\n        }\n    }\n    return response;\n}, error => {\n    return error;\n});\n\nexport default instance;\n\n\n","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\nimport { setItem, clearItems } from '../../helpers/cookie';\nimport { loginUrl, signupUrl, socialLoginUrl, verifyEmailUrl, setPasswordUrl } from '../../url/Auth';\n\n\nexport const setSnackbarMessage = (message) => {\n    return {\n        type: actionTypes.SET_SNACKBAR_MESSAGE,\n        message\n    };\n};\n\nexport const authSuccess = (response) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        adminDetails: response,\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    // Clear cookies on logout\n    clearItems();\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const updateLoadingStatus = (status) => {\n    return {\n        type: actionTypes.UPDATE_LOADING_STATUS,\n        status\n    };\n};\n\nexport const login = (loginDetails) => {\n    return dispatch => {\n        dispatch(updateLoadingStatus(true));\n        axios.post(loginUrl(), loginDetails)\n            .then(response => {\n                dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    const auth = {\n                        token: response.data.entity.token,\n                        id: response.data.entity.id,\n                        role: response.data.entity.roles\n                    }\n                    setItem('auth', auth);\n                    dispatch(authSuccess(response.data.entity));\n                } else {\n                    dispatch(authFail('Invalid username or password !'));\n                }\n            })\n            .catch(error => {\n                dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n\nexport const signup = (signupDetails) => {\n    return dispatch => {\n        dispatch(updateLoadingStatus(true));\n        axios.post(signupUrl(), signupDetails)\n            .then(response => {\n                dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    dispatch(setSnackbarMessage('User created successfully !'));\n                    dispatch(login(signupDetails));\n                } else {\n                    dispatch(authFail('Invalid username or password !'));\n                }\n            })\n            .catch(error => {\n                dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n\nexport const setRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const emptyToken = () => {\n    return {\n        type: actionTypes.EMPTY_TOKEN\n    };\n};\n\nexport const socialLogin = (authDetails) => {\n    return dispatch => {\n        dispatch(updateLoadingStatus(true));\n        axios.post(socialLoginUrl(), authDetails)\n            .then(response => {\n                dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    const auth = {\n                        token: response.data.entity.token,\n                        id: response.data.entity.id,\n                        role: response.data.entity.roles\n                    }\n                    setItem('auth', auth);\n                    dispatch(authSuccess(response.data.entity));\n                    // dispatch(checkUserProfileUpdated(response.data.entity.isUserProfileUpdated));\n                } else {\n                    dispatch(authFail('Invalid username or password !'));\n                }\n            })\n            .catch(error => {\n                dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n\nexport const setRequestToSetPasswordId = (requestToSetPassword) => {\n    return {\n        type: actionTypes.SET_REQUEST_TO_SET_PASSWORD_ID,\n        requestToSetPassword\n    };\n};\n\nexport const verifyEmail = (email) => {\n    return dispatch => {\n        dispatch(updateLoadingStatus(true));\n        axios.post(verifyEmailUrl(), { email: email })\n            .then(response => {\n                dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    dispatch(setSnackbarMessage(response.data.message));\n                    dispatch(setRequestToSetPasswordId(response.data.entity.requestToSetPassword.id));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n\n\nexport const updateSetPasswordStatus = (status) => {\n    return {\n        type: actionTypes.UPDATE_SET_PASSWORD_STATUS,\n        status\n    };\n};\n\nexport const setPassword = (passwordData) => {\n    return dispatch => {\n        // dispatch(updateLoadingStatus(true));\n        axios.post(setPasswordUrl(), passwordData)\n            .then(response => {\n                // dispatch(updateLoadingStatus(false));\n                if (response.data.status) {\n                    dispatch(setSnackbarMessage('Password set successfully !'));\n                    dispatch(updateSetPasswordStatus(true));\n                }\n                else {\n                    dispatch(updateSetPasswordStatus(false));\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                // dispatch(updateLoadingStatus(false));\n                if (error.response && error.response.status === 401) {\n                    dispatch(authFail(error.response.data.message));\n                } else {\n                    dispatch(authFail('Something Went Wrong !!'));\n                }\n            });\n    };\n};\n","\nexport const loginUrl = () => {\n    return `login`;\n};\n\nexport const signupUrl = () => {\n    return `users`;\n};\n\nexport const socialLoginUrl = () => {\n    return `social-login`;\n};\n\nexport const verifyEmailUrl = () => {\n    return `requesttosetpassword`;\n};\n\nexport const setPasswordUrl = () => {\n    return `forgotpassword`;\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\n// import { getItem } from '../../helpers/cookie';\n\nexport const setLeaders = (leaders) => {\n    return {\n        type: actionTypes.SET_LEADERS,\n        leaders\n    };\n};\n\nexport const getLeaders = () => {\n    return dispatch => {\n        axios.get(`leadership`)\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setLeaders(response.data.entity));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\nimport { updateUserLocationUrl } from '../../url/MainLayout';\n\nexport const setSnackbarMessage = (message) => {\n    return {\n        type: actionTypes.SET_SNACKBAR_MESSAGE,\n        message\n    };\n};\n\nexport const updateUserLocation = (location) => {\n    return dispatch => {\n        axios.put(updateUserLocationUrl(), location)\n            .then(response => {\n\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\n","\nimport { getItem } from '../helpers/cookie';\n\nexport const updateUserLocationUrl = () => {\n    return `users/${getItem('id')}/location`;\n};\n","\nimport { getItem } from '../helpers/cookie';\n\nexport const cardsUrl = () => {\n    return `users/${getItem('id')}/cards`;\n};\n\nexport const cardDetailsUrl = (cardId) => {\n    return `cards/${cardId}/details`;\n};\n\nexport const socialUrl = () => {\n    return `users/${getItem('id')}/social`;\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\nimport { cardsUrl, cardDetailsUrl, socialUrl } from '../../url/MyCards';\n\nexport const setSnackbarMessage = (message) => {\n    return {\n        type: actionTypes.SET_SNACKBAR_MESSAGE,\n        message\n    };\n};\n\nexport const updateLoadingStatus = (status) => {\n    return {\n        type: actionTypes.UPDATE_LOADING_STATUS,\n        status\n    };\n};\n\nexport const setCards = (cards) => {\n    return {\n        type: actionTypes.SET_CARDS,\n        cards\n    };\n};\n\nexport const setUserDetails = (userDetails) => {\n    return {\n        type: actionTypes.SET_USER_DETAILS,\n        userDetails\n    };\n};\n\nexport const getCards = () => {\n    return dispatch => {\n        axios.get(cardsUrl())\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setCards(response.data.entity.cards || []));\n                    dispatch(setUserDetails(response.data.entity.user));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                dispatch(setSnackbarMessage('Something Went Wrong !!'));\n            });\n    };\n};\n\nexport const setSocialUrl = (socialUrl) => {\n    return {\n        type: actionTypes.SET_SOCIAL_URL,\n        socialUrl\n    };\n};\n\nexport const getSocialUrl = () => {\n    return dispatch => {\n        axios.get(socialUrl())\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setSocialUrl(response.data.entity));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\nexport const updateCards = (cardDetails) => {\n    return {\n        type: actionTypes.UPDATE_CARDS,\n        cardDetails\n    };\n};\n\nexport const addCard = (cardDetails) => {\n    return dispatch => {\n        axios.post(cardsUrl(), cardDetails)\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(updateCards(response.data.entity));\n                    dispatch(setSnackbarMessage(response.data.message));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                // dispatch(authFail('Something Went Wrong !!'));\n            });\n    };\n};\n\nexport const updateCardDetails = (cardId, cardDetails) => {\n    return dispatch => {\n        axios.put(cardDetailsUrl(cardId), cardDetails)\n            .then(response => {\n                if (response.data.entity) {\n                    // dispatch(updateCards(response.data.entity));\n                    dispatch(setSnackbarMessage(response.data.message));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n                // dispatch(authFail('Something Went Wrong !!'));\n            });\n    };\n};\n\nexport const emptyCards = () => {\n    return {\n        type: actionTypes.EMPTY_CARDS\n    };\n};\n","\n\nimport { getItem } from '../helpers/cookie';\n\nexport const userProfileUrl = () => {\n    return `users/${getItem('id')}/profile`;\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../httpInstance/axios';\nimport { userProfileUrl } from '../../url/Home';\nimport { socialUrl } from '../../url/MyCards';\n\nexport const setSnackbarMessage = (message) => {\n    return {\n        type: actionTypes.SET_SNACKBAR_MESSAGE,\n        message\n    };\n};\n\nexport const setUserDetails = (userDetails) => {\n    return {\n        type: actionTypes.SET_USER_DETAILS,\n        userDetails\n    };\n};\n\nexport const setUserSocialUrl = (userSocialUrl) => {\n    return {\n        type: actionTypes.SET_USER_SOCIAL_URL,\n        userSocialUrl\n    };\n};\n\nexport const getUserProfile = () => {\n    return dispatch => {\n        axios.get(userProfileUrl())\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setUserSocialUrl(response.data.entity.social));\n                    dispatch(setUserDetails(response.data.entity.user));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\nexport const updateUserProfile = (profileDetails) => {\n    return dispatch => {\n        axios.put(userProfileUrl(), profileDetails)\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setUserDetails(response.data.entity));\n                    dispatch(setSnackbarMessage(response.data.message));\n                } else {\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\nexport const updateSocialUrl = (socialPlatform) => {\n    return dispatch => {\n        axios.put(socialUrl(), socialPlatform)\n            .then(response => {\n                if (response.data.entity) {\n                    dispatch(setUserSocialUrl(response.data.entity));\n                    dispatch(setSnackbarMessage(response.data.message));\n                }\n            })\n            .catch(error => {\n\n            });\n    };\n};\n\nexport const emptyUserProfile = () => {\n    return {\n        type: actionTypes.EMPTY_USER_PROFILE\n    };\n};\n","/*\n * This file contains actions to be exported\n */\n\nexport {\n    login,\n    logout,\n    setRedirectPath,\n    authFail,\n    emptyToken,\n    signup,\n    socialLogin,\n    verifyEmail,\n    setPassword\n} from './Auth';\n\nexport {\n    getQuestions\n} from './Contests';\n\nexport {\n    getLeaders\n} from './Leaders';\n\nexport {\n    getWalletDetails,\n    getTransactions\n} from './Wallet';\n\nexport {\n    getUnsettledContests,\n    getSettledContests\n} from './Account';\n\nexport {\n    setSnackbarMessage,\n    updateUserLocation\n} from './MainLayout';\n\nexport {\n    getCards,\n    getSocialUrl,\n    addCard,\n    emptyCards,\n    updateCardDetails\n} from './MyCards';\n\nexport {\n    getUserProfile,\n    emptyUserProfile,\n    updateUserProfile,\n    updateSocialUrl\n} from './Home';\n","import Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport const getItem = (key) => {\n    const meta = cookies.get('auth');\n    return meta && meta[key];\n};\n\nexport const setItem = (key, value) => {\n    cookies.set(key, value, { path: '/' });\n};\n\nexport const removeItem = (key) => {\n    cookies.remove(key, { path: '/' });\n};\n\nexport const clearItems = () => {\n    const allCookies = cookies.getAll();\n    for (let key in allCookies) {\n        cookies.remove(key, { path: '/' });\n    }\n};\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbar\":\"Snackbar_snackbar__3lYxu\",\"show\":\"Snackbar_show__2VBQP\",\"fadeout\":\"Snackbar_fadeout__KBZDk\",\"fadein\":\"Snackbar_fadein__238iU\",\"close_icon\":\"Snackbar_close_icon__1NyqO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrong-outer\":\"ErrorBoundary_wrong-outer__3bAmd\",\"wrong-inner\":\"ErrorBoundary_wrong-inner__1GDa-\",\"img-went-wrong\":\"ErrorBoundary_img-went-wrong__2hIJk\"};"],"sourceRoot":""}