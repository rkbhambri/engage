{"version":3,"sources":["assets/img/user.svg","helpers/messages.js","helpers/Object.js","assets/Cards/Card-4.jpg","assets/Cards/Card-1.jpg","assets/Cards/Card-2.jpg","assets/Cards/Card-3.jpg","assets/Cards/Card-5.jpg","assets/Cards/Card-6.jpg","components/Home/SocialDetails/SocialIcons.js","assets/social-icons/Behance.svg","assets/social-icons/Dribble.svg","assets/social-icons/Facebook.svg","assets/social-icons/Instagram.svg","assets/social-icons/Linkedin.svg","assets/social-icons/Pinterest.svg","assets/social-icons/Twitter.svg","assets/social-icons/Youtube.svg","helpers/socialMedia.js","components/MyCards/Cards/Card/Card.js","components/MyCards/Cards/Cards.js","components/MyCards/AddCard/AddCardForm/AddCardForm.js","components/MyCards/AddCard/AddCard.js","components/MyCards/MyCards.js"],"names":["module","exports","__webpack_require__","p","d","__webpack_exports__","messages","socialMedia","name","email","cardName","category","required","invalidEmail","notMatch","passwordFormat","firstName","lastName","mobile","isMobileInvalid","dateOfBirth","summary","schoolName","area","city","fromGrade","toGrade","competitionName","year","standing","videoUrl","title","explanation","tags","participants","teamName","projectName","problemToSolve","reasonToSolveProblem","approachToSolveProblem","technologyUsed","isObjectEmpty","isObjectNotEmpty","obj","Object","keys","length","SocialIcons","props","_useState","useState","dribble","facebook","linkedin","behance","instagram","pinterest","twitter","youtubeChannel","placeholder","_Users_admin_Documents_Engage_engage_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","_useState3","value","_useState4","url","setUrl","useEffect","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","key","trigger","semantic_ui_react__WEBPACK_IMPORTED_MODULE_3__","src","style","height","width","className","flowing","hoverable","semantic_ui_react__WEBPACK_IMPORTED_MODULE_4__","Column","textAlign","semantic_ui_react__WEBPACK_IMPORTED_MODULE_5__","type","transparent","size","platform","color","onChange","event","target","semantic_ui_react__WEBPACK_IMPORTED_MODULE_6__","onClick","updateSocialUrl","window","location","pathname","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","disabled","addToCard","isActive","socialMediaPlatforms","connect","dispatch","onUpdateCardDetails","cardId","cardDetails","actionCreaters","facebookUrl","instagramUrl","linkedinUrl","tiktokUrl","youtubeChannelUrl","isFacebookActive","isInstagramActive","isLinkedinActive","isTiktokActive","isYoutubeChannelActive","_useState2","slicedToArray","setCardDetails","invalidInput","setInvalidInput","_useState5","_useState6","editCardId","setEditcardId","_useState7","Personal","Card1","Professional","Card2","Meetup","Card3","Travel","Card4","Social","Card5","Work","Card6","Office","cards","selectLogoImage","Behance","Dribble","Facebook","Instagram","Linkedin","Pinterest","Twitter","Youtube","console","log","card","objectSpread","social","thumbnailId","react_default","borderRadius","backgroundImage","concat","Col","go","fontSize","Profile_pic","alt","userDetails","md","sm","Divider","horizontal","isDribbleActive","isBehanceActive","isPinterestActive","isTwitterActive","id","prevState","Icon","Row","map","item","xs","getCapitalizeText","activeUrl","invalidInputDetails","parseData","urlValue","urlKey","Button","icon","Cards","Cards_Card_Card","state","socialUrl","myCards","onGetSocialUrl","onAddCard","text","cardTypeOptions","twitterUrl","snapchatUrl","whatsappUrl","githubUrl","stackoverflowUrl","dribbleUrl","behanceUrl","upiAddress","paypalUrl","upworkUrl","fiverrUrl","isSnapchatActive","isWhatsappActive","isGithubActive","isStackoverflowActive","isUpiActive","isPaypalActive","isUpworkActive","isFiverrActive","updatedCardDetails","addCard","isEmpty","isUrlAdded","isSocialUrlAdded","toggleAddCardModal","Form","Select","error","fluid","options","textContent","categoryChangeHandler","AddCard","Modal","dimmer","open","isAddCardModalOpen","onClose","closeIcon","Content","Description","AddCard_AddCardForm_AddCardForm","home","onGetCards","onEmptyCards","setAddCardModalOpen","MyCards_AddCard_AddCard","MyCards_Cards_Cards"],"mappings":"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","file":"static/js/9.9a39057c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.7a21cbe9.svg\";","\nexport const messages = {\n    socialMedia: 'Please add atleast one social media',\n    name: 'Name is required',\n    email: 'Email is required',\n    cardName: 'Card Name is required',\n    category: 'Card Category is required',\n    required: 'is required',\n    invalidEmail: 'Please enter a valid email',\n    notMatch: 'Password and Confirm Password not match',\n    passwordFormat: 'At least 6 characters with at least 1 Small & Upper case character, a number & symbol',\n    firstName: 'First name is required',\n    lastName: 'Last name is required',\n    mobile: 'Mobile number is required',\n    isMobileInvalid: 'Mobile number contain 10 digits',\n    dateOfBirth: 'Date Of Birth is required',\n    summary: 'Summary is required',\n    schoolName: 'School name is required',\n    area: 'Area is required',\n    city: 'City is required',\n    fromGrade: 'From class is required',\n    toGrade: 'To Class is required',\n    competitionName: 'Competition name is required',\n    year: 'Year is required',\n    standing: 'Standing position is required',\n    videoUrl: 'Video is required',\n    title: 'Title is required',\n    explanation: 'Explanation is required',\n    tags: 'Tags are required',\n    participants: 'Please add atlease one participant',\n    teamName: 'Please enter your team name',\n    projectName: 'Please enter your project name',\n    problemToSolve: 'Please specify the problem to solve',\n    reasonToSolveProblem: 'Please specify the reason to solve the problem',\n    approachToSolveProblem: 'Please specify your approach to solve the problem',\n    technologyUsed: 'Please specify the list of technologies you want to use'\n};\n","\nexport const isKeyExist = (obj, key) => {\n    return obj.hasOwnProperty(key);\n};\n\nexport const isObjectEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n};\n\nexport const isObjectNotEmpty = (obj) => {\n    return Object.keys(obj).length > 0;\n};\n","module.exports = __webpack_public_path__ + \"static/media/Card-4.c402cf9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Card-1.48711be7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Card-2.5442f60c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Card-3.ba448f33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Card-5.9896da61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Card-6.8b9075cc.jpg\";","import React, { useState, useEffect } from 'react';\nimport { Icon, Popup, Grid, Input, Image, Button } from 'semantic-ui-react'\n\nconst SocialIcons = (props) => {\n    const [placeholder] = useState({\n        dribble: 'Dribble url',\n        facebook: 'Facebook username',\n        linkedin: 'LinkedIn url',\n        behance: 'Behance url',\n        instagram: 'Instagram username',\n        pinterest: 'Pinterest username',\n        twitter: 'Twitter url',\n        youtubeChannel: 'Youtube channel url'\n    });\n    const [url, setUrl] = useState(props.value);\n\n    useEffect(() => {\n        setUrl(props.value);\n    }, [props.value]);\n\n    const urlChangeHandler = (value) => {\n        setUrl(value);\n    };\n\n    return (\n        <Popup\n            key={props.name}\n            trigger={\n                <Image\n                    src={props.src}\n                    style={{ height: '70px', width: '70px' }}\n                    className={props.className} />\n            }\n            flowing\n            hoverable>\n            <Grid.Column textAlign='center'>\n                <Input\n                    type=\"text\"\n                    transparent\n                    size=\"large\"\n                    placeholder={placeholder[props.platform]}\n                    className=\"border-bottom\"\n                    style={{ color: '#fff' }}\n                    onChange={(event) => urlChangeHandler(event.target.value)}\n                    value={url}\n                />\n                <Icon name=\"check\" style={{ color: 'green' }} className=\"ml-3\" onClick={() => props.updateSocialUrl(url)}></Icon>\n            </Grid.Column>\n            {\n                window.location.pathname !== '/' &&\n                <Grid.Column className=\"pt-3 pb-2\">\n                    <Button\n                        color=\"blue\"\n                        size=\"tiny\"\n                        disabled={!props.value}\n                        onClick={() => props.addToCard()}>{props.isActive ? 'Move From Card' : 'Add To Card'}</Button>\n                </Grid.Column>\n            }\n        </Popup>\n    );\n};\n\nexport default SocialIcons;\n","module.exports = __webpack_public_path__ + \"static/media/Behance.0019100c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dribble.bf2afd78.svg\";","module.exports = __webpack_public_path__ + \"static/media/Facebook.1f1d3206.svg\";","module.exports = __webpack_public_path__ + \"static/media/Instagram.f414b0ea.svg\";","module.exports = __webpack_public_path__ + \"static/media/Linkedin.a573f23e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Pinterest.69a65581.svg\";","module.exports = __webpack_public_path__ + \"static/media/Twitter.f5afd4b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Youtube.f414b0ea.svg\";","\nexport const socialMediaPlatforms = ['dribble', 'facebook', 'linkedin', 'behance', 'instagram', 'pinterest', 'twitter', 'youtubeChannel'];\n","import React, { useState, useEffect } from 'react';\nimport { Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { GoBroadcast } from 'react-icons/go';\nimport { Icon, Divider, Button } from 'semantic-ui-react';\nimport './Card.css';\nimport * as actionCreaters from '../../../../store/actions';\nimport { socialMediaPlatforms } from '../../../../helpers/socialMedia';\nimport { getCapitalizeText, parseData } from '../../../../helpers/miscellaneous';\nimport SocialIcons from '../../../Home/SocialDetails/SocialIcons';\nimport Profile_pic from '../../../../assets/img/user.svg';\nimport Card1 from '../../../../assets/Cards/Card-1.jpg';\nimport Card2 from '../../../../assets/Cards/Card-2.jpg';\nimport Card3 from '../../../../assets/Cards/Card-3.jpg';\nimport Card4 from '../../../../assets/Cards/Card-4.jpg';\nimport Card5 from '../../../../assets/Cards/Card-5.jpg';\nimport Card6 from '../../../../assets/Cards/Card-6.jpg';\nimport Behance from '../../../../assets/social-icons/Behance.svg';\nimport Dribble from '../../../../assets/social-icons/Dribble.svg';\nimport Facebook from '../../../../assets/social-icons/Facebook.svg';\nimport Instagram from '../../../../assets/social-icons/Instagram.svg';\nimport Linkedin from '../../../../assets/social-icons/Linkedin.svg';\nimport Pinterest from '../../../../assets/social-icons/Pinterest.svg';\nimport Twitter from '../../../../assets/social-icons/Twitter.svg';\nimport Youtube from '../../../../assets/social-icons/Youtube.svg';\n\nconst Card = (props) => {\n\n    const [cardDetails, setCardDetails] = useState({\n        category: '',\n        // thumbnailId: '',\n        facebookUrl: '',\n        instagramUrl: '',\n        linkedinUrl: '',\n        tiktokUrl: '',\n        youtubeChannelUrl: '',\n        isFacebookActive: false,\n        isInstagramActive: false,\n        isLinkedinActive: false,\n        isTiktokActive: false,\n        isYoutubeChannelActive: false\n    });\n    const [invalidInput, setInvalidInput] = useState({});\n\n    const [editCardId, setEditcardId] = useState(false);\n\n    const [cards] = useState({\n        Personal: Card1,\n        Professional: Card2,\n        Meetup: Card3,\n        Travel: Card4,\n        Social: Card5,\n        Work: Card6,\n        Office: Card1\n    });\n\n    const selectLogoImage = {\n        behance: Behance,\n        dribble: Dribble,\n        facebook: Facebook,\n        instagram: Instagram,\n        linkedin: Linkedin,\n        pinterest: Pinterest,\n        twitter: Twitter,\n        youtubeChannel: Youtube,\n    };\n\n    useEffect(() => {\n        console.log('===', props.cardDetails);\n        const card = { ...props.cardDetails };\n        card.social.thumbnailId = ''\n        setCardDetails(card.social);\n    }, [props.cardDetails]);\n\n    const editCardDetails = (id) => {\n        setEditcardId(prevState => !prevState);\n    };\n\n    const addToCard = (activeUrl) => {\n        const card = { ...cardDetails };\n        card[activeUrl] = !card[activeUrl];\n        setCardDetails(card);\n        if (invalidInput.socialMedia) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.socialMedia;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const updateSocialUrl = (urlValue, urlKey) => {\n        const card = { ...cardDetails };\n        card[urlKey] = urlValue;\n        setCardDetails(card);\n        if (invalidInput.socialMedia) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.socialMedia;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const updateCardDetails = () => {\n        setEditcardId(prevState => !prevState);\n        props.onUpdateCardDetails(props.cardDetails.id, cardDetails);\n    };\n\n    return (\n        <div className=\"card mt-4\" style={{ borderRadius: '15px', backgroundImage: `url(${cards[props.cardDetails.category]})` }}>\n            <div className=\"text-center mt-1 font-weight-bold\">\n                {props.cardDetails.category}\n            </div>\n            <Col className=\"text-right mb-2\">\n                <GoBroadcast className=\"mt-1\" style={{ fontSize: '28px' }} />\n                <div className=\"text-center\">\n                    <div className=\"profile-pic\">\n                        <img\n                            src={Profile_pic}\n                            className=\"rounded-circle\"\n                            alt=\"not available\"\n                            style={{ height: '60px', width: '60px' }}\n                        // onError={(event) => event.target.src = defaultUserImage}\n                        />\n                    </div>\n                    <div className=\"name mt-3\">{props.userDetails.name}</div>\n                </div>\n            </Col>\n            <Col\n                className=\"social-details\"\n                md={12}\n                sm={12}>\n                <div className=\"social-icons\">\n                    <Divider horizontal className=\"m-0\">\n\n                        {\n                            cardDetails.isFacebookActive &&\n                            <img\n                                src={Facebook}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isInstagramActive &&\n                            <img\n                                src={Instagram}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isLinkedinActive &&\n                            <img\n                                src={Linkedin}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isTiktokActive &&\n                            <img\n                                src={Facebook}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isDribbleActive &&\n                            <img\n                                src={Dribble}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isBehanceActive &&\n                            <img\n                                src={Behance}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isPinterestActive &&\n                            <img\n                                src={Pinterest}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isTwitterActive &&\n                            <img\n                                src={Twitter}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                        {\n                            cardDetails.isYoutubeChannelActive &&\n                            <img\n                                src={Youtube}\n                                alt=\"Engaze\"\n                                style={{ height: '40px', width: '40px' }} />\n                        }\n                    </Divider>\n                </div>\n            </Col>\n            <div className=\"text-right\" onClick={() => editCardDetails(props.id)}>\n                <Icon name=\"angle down\" style={{ fontSize: '25px' }} />\n            </div>\n            {\n                editCardId &&\n                <Col>\n                    <Row>\n                        {\n                            socialMediaPlatforms.map(item => {\n                                return (\n                                    <Col xs={4} md={4} key={item}>\n                                        <SocialIcons\n                                            src={selectLogoImage[item]}\n                                            platform={item}\n                                            value={cardDetails[`${item}Url`] || ''}\n                                            isActive={cardDetails[`is${getCapitalizeText(item)}Active`]}\n                                            addToCard={() => addToCard(`is${getCapitalizeText(item)}Active`)}\n                                            updateSocialUrl={(urlValue) => updateSocialUrl(urlValue, `${item}Url`)}\n                                        />\n                                    </Col>\n                                );\n                            })\n                        }\n                    </Row><br />\n                    <div className=\"text-center mb-3\">\n                        <Button\n                            className=\"pl-4 pr-4\"\n                            size=\"tiny\"\n                            icon=\"check\"\n                            style={{ color: 'green', borderRadius: '8px' }}\n                            onClick={() => updateCardDetails()} />\n                    </div>\n                </Col>\n            }\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateCardDetails: (cardId, cardDetails) => dispatch(actionCreaters.updateCardDetails(cardId, cardDetails))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Card);\n","import React from 'react';\nimport Card from './Card/Card'\n\nconst Cards = (props) => {\n    return (\n        <div className=\"cards\">\n            {\n                props.cards.map(item => {\n                    return (\n                        <Card key={item.id} cardDetails={item} userDetails={props.userDetails} />\n                    );\n                })\n            }\n        </div>\n    );\n};\n\nexport default Cards;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Col, Row } from 'reactstrap';\nimport { Form, Button, Select } from 'semantic-ui-react';\nimport * as actionCreaters from '../../../../store/actions';\nimport { parseData, isEmpty, getCapitalizeText } from '../../../../helpers/miscellaneous';\nimport { messages } from '../../../../helpers/messages';\nimport { isObjectEmpty, isObjectNotEmpty } from '../../../../helpers/Object';\nimport { socialMediaPlatforms } from '../../../../helpers/socialMedia';\nimport SocialIcons from '../../../Home/SocialDetails/SocialIcons';\nimport Behance from '../../../../assets/social-icons/Behance.svg';\nimport Dribble from '../../../../assets/social-icons/Dribble.svg';\nimport Facebook from '../../../../assets/social-icons/Facebook.svg';\nimport Instagram from '../../../../assets/social-icons/Instagram.svg';\nimport Linkedin from '../../../../assets/social-icons/Linkedin.svg';\nimport Pinterest from '../../../../assets/social-icons/Pinterest.svg';\nimport Twitter from '../../../../assets/social-icons/Twitter.svg';\nimport Youtube from '../../../../assets/social-icons/Youtube.svg';\n\nconst AddCardForm = (props) => {\n\n    const [cardTypeOptions] = useState([\n        { key: 'af', value: 'Meetup', text: 'Meetup' },\n        { key: 'ax', value: 'Personal', text: 'Personal' },\n        { key: 'al', value: 'al', text: 'Professional' },\n        { key: 'dz', value: 'dz', text: 'Travel' },\n        { key: 'as', value: 'as', text: 'Social' },\n        { key: 'ad', value: 'ad', text: 'Work' },\n        { key: 'ao', value: 'ao', text: 'Office' }\n    ]);\n\n    const selectLogoImage = {\n        behance: Behance,\n        dribble: Dribble,\n        facebook: Facebook,\n        instagram: Instagram,\n        linkedin: Linkedin,\n        pinterest: Pinterest,\n        twitter: Twitter,\n        youtubeChannel: Youtube,\n    }\n\n    const [cardDetails, setCardDetails] = useState({\n        name: '',\n        category: '',\n        thumbnailId: '',\n        facebookUrl: '',\n        instagramUrl: '',\n        linkedinUrl: '',\n        tiktokUrl: '',\n        youtubeChannelUrl: '',\n        twitterUrl: '',\n        snapchatUrl: '',\n        whatsappUrl: '',\n        githubUrl: '',\n        stackoverflowUrl: '',\n        dribbleUrl: '',\n        behanceUrl: '',\n        upiAddress: '',\n        paypalUrl: '',\n        upworkUrl: '',\n        fiverrUrl: '',\n        isFacebookActive: false,\n        isInstagramActive: false,\n        isLinkedinActive: false,\n        isTiktokActive: false,\n        isYoutubeChannelActive: false,\n        isTwitterActive: false,\n        isSnapchatActive: false,\n        isWhatsappActive: false,\n        isGithubActive: false,\n        isStackoverflowActive: false,\n        isDribbleActive: false,\n        isBehanceActive: false,\n        isUpiActive: false,\n        isPaypalActive: false,\n        isUpworkActive: false,\n        isFiverrActive: false\n    });\n    const [invalidInput, setInvalidInput] = useState({});\n\n    useEffect(() => {\n        props.onGetSocialUrl();\n    }, []);\n\n    useEffect(() => {\n        if (isObjectNotEmpty(props.socialUrl)) {\n            const updatedCardDetails = { ...cardDetails, ...props.socialUrl };\n            setCardDetails(updatedCardDetails);\n        }\n    }, [props.socialUrl]);\n\n    const categoryChangeHandler = (event) => {\n        const card = { ...cardDetails };\n        card.category = event.target.textContent;\n        setCardDetails(card);\n        if (invalidInput.category) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.category;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const addToCard = (activeUrl) => {\n        const card = { ...cardDetails };\n        card[activeUrl] = !card[activeUrl];\n        setCardDetails(card);\n        if (invalidInput.socialMedia) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.socialMedia;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    const updateSocialUrl = (urlValue, urlKey) => {\n        const card = { ...cardDetails };\n        card[urlKey] = urlValue;\n        setCardDetails(card);\n        if (invalidInput.socialMedia) {\n            const invalidInputDetails = parseData(invalidInput);\n            delete invalidInputDetails.socialMedia;\n            setInvalidInput(invalidInputDetails);\n        }\n    };\n\n    // const selectSocialLink = (social) => {\n    //     const card = { ...cardDetails };\n    //     card[social] = !card[social];\n    //     setCardDetails(card);\n    // };\n\n    const isSocialUrlAdded = () => {\n        let isUrlAdded = false;\n        for (let key in cardDetails) {\n            if (cardDetails[key] === true) {\n                isUrlAdded = true;\n            }\n        }\n        return isUrlAdded;\n    };\n\n    const addCard = () => {\n        const invalidInputDetails = parseData(invalidInput);\n\n        if (isEmpty(cardDetails.category)) {\n            invalidInputDetails.category = `${messages.category}`;\n        }\n        if (!isSocialUrlAdded()) {\n            invalidInputDetails.socialMedia = `${messages.socialMedia}`;\n        }\n\n        setInvalidInput(invalidInputDetails);\n\n        if (isObjectEmpty(invalidInputDetails)) {\n            props.toggleAddCardModal();\n            props.onAddCard(cardDetails);\n        }\n    };\n\n    return (\n        <Form>\n            <div className=\"card-type mt-2\">\n                <h5>Card Category</h5>\n                <Select\n                    error={invalidInput.category ? true : false}\n                    fluid\n                    placeholder='Select Card Category'\n                    options={cardTypeOptions}\n                    onChange={(event) => categoryChangeHandler(event)} />\n                {\n                    invalidInput.category && <span className=\"text-danger pl-1\">{invalidInput.category}</span>\n                }\n            </div><br />\n            <div className=\"social-links\">\n                <h3>Social Links</h3>\n                {\n                    invalidInput.socialMedia && <span className=\"text-danger pl-1\">{invalidInput.socialMedia}</span>\n                }\n                <Row>\n                    {\n                        socialMediaPlatforms.map(item => {\n                            return (\n                                <Col xs={4} md={4} key={item}>\n                                    <SocialIcons\n                                        src={selectLogoImage[item]}\n                                        platform={item}\n                                        value={cardDetails[`${item}Url`] || ''}\n                                        isActive={cardDetails[`is${getCapitalizeText(item)}Active`]}\n                                        addToCard={() => addToCard(`is${getCapitalizeText(item)}Active`)}\n                                        updateSocialUrl={(urlValue) => updateSocialUrl(urlValue, `${item}Url`)} />\n                                </Col>\n                            );\n                        })\n                    }\n                </Row>\n            </div>\n            <div className=\"text-right mt-4\">\n                <Button onClick={() => addCard()}>Add</Button>\n            </div>\n        </Form>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        socialUrl: state.myCards.socialUrl\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetSocialUrl: () => dispatch(actionCreaters.getSocialUrl()),\n        onAddCard: (cardDetails) => dispatch(actionCreaters.addCard(cardDetails))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCardForm);\n","import React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport AddCardForm from './AddCardForm/AddCardForm'\n\nconst AddCard = (props) => {\n    return (\n        <Modal\n            dimmer={true}\n            open={props.isAddCardModalOpen}\n            onClose={props.toggleAddCardModal}\n            className=\"add-card-details\"\n            closeIcon\n            id=\"modal\">\n            <Modal.Content>\n                <Modal.Description>\n                    <AddCardForm toggleAddCardModal={() => props.toggleAddCardModal()} />\n                </Modal.Description><br />\n            </Modal.Content>\n        </Modal>\n    );\n};\n\nexport default AddCard;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport * as actionCreaters from '../../store/actions';\nimport { Col, Row } from 'reactstrap';\nimport Cards from './Cards/Cards';\nimport AddCard from './AddCard/AddCard';\nimport './MyCards.css';\n\nconst MyCards = (props) => {\n\n    const [isAddCardModalOpen, setAddCardModalOpen] = useState(false);\n\n    const toggleAddCardModal = () => {\n        setAddCardModalOpen(prevState => !prevState);\n    };\n\n    useEffect(() => {\n        props.onGetCards();\n        return (() => {\n            props.onEmptyCards();\n        })\n    }, []);\n\n    return (\n        <Col className=\"my-cards pt-4 pb-5\">\n            <AddCard\n                isAddCardModalOpen={isAddCardModalOpen}\n                toggleAddCardModal={() => toggleAddCardModal()} />\n            <Row className=\"mb-3\">\n                <Col xs={8}>\n                    <h3 className=\"text-white pl-1\">My Cards</h3>\n                </Col>\n                <Col className=\"add-icon text-right\">\n                    <Button\n                        size=\"tiny\"\n                        icon=\"add\"\n                        style={{ color: '#000', borderRadius: '8px' }}\n                        onClick={() => toggleAddCardModal()} />\n                </Col>\n            </Row>\n            <Cards cards={props.cards} userDetails={props.userDetails} />\n            {/* <Transactions transactions={props.transactions} /> */}\n        </Col>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        cards: state.myCards.cards,\n        userDetails: state.home.userDetails\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetCards: () => dispatch(actionCreaters.getCards()),\n        onEmptyCards: () => dispatch(actionCreaters.emptyCards()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCards);\n"],"sourceRoot":""}